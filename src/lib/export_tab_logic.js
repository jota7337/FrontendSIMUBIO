import { saveAs } from "file-saver"
import { supabase } from "../supabase/client"

// =====================
// Campos Darwin Core (179 columnas)
// =====================
const headers = [
    "occurrenceID",
    "basisOfRecord",
    "type",
    "institutionCode",
    "institutionID",
    "collectionCode",
    "collectionID",
    "catalogNumber",
    "datasetName",
    "datasetID",
    "modified",
    "language",
    "license",
    "rightsHolder",
    "accessRights",
    "bibliographicCitation",
    "references",
    "ownerInstitutionCode",
    "informationWithheld",
    "dataGeneralizations",
    "dynamicProperties",
    "recordNumber",
    "recordedBy",
    "recordedByID",
    "organismID",
    "individualCount",
    "organismQuantity",
    "organismQuantityType",
    "organismName",
    "organismScope",
    "associatedOrganisms",
    "previousIdentifications",
    "organismRemarks",
    "sex",
    "lifeStage",
    "reproductiveCondition",
    "behavior",
    "establishmentMeans",
    "degreeOfEstablishment",
    "pathway",
    "occurrenceStatus",
    "preparations",
    "disposition",
    "otherCatalogNumbers",
    "associatedMedia",
    "associatedOccurrences",
    "associatedReferences",
    "associatedSequences",
    "associatedTaxa",
    "occurrenceRemarks",
    "materialSampleID",
    "parentEventID",
    "eventID",
    "samplingProtocol",
    "sampleSizeValue",
    "sampleSizeUnit",
    "samplingEffort",
    "eventDate",
    "startDayOfYear",
    "endDayOfYear",
    "year",
    "month",
    "day",
    "verbatimEventDate",
    "eventTime",
    "habitat",
    "fieldNumber",
    "fieldNotes",
    "eventRemarks",
    "locationID",
    "higherGeography",
    "higherGeographyID",
    "continent",
    "waterBody",
    "islandGroup",
    "island",
    "country",
    "countryCode",
    "stateProvince",
    "county",
    "municipality",
    "locality",
    "verbatimLocality",
    "verbatimElevation",
    "minimumElevationInMeters",
    "maximumElevationInMeters",
    "verticalDatum",
    "verbatimDepth",
    "minimumDepthInMeters",
    "maximumDepthInMeters",
    "minimumDistanceAboveSurfaceInMeters",
    "maximumDistanceAboveSurfaceInMeters",
    "locationAccordingTo",
    "locationRemarks",
    "verbatimLatitude",
    "verbatimLongitude",
    "verbatimCoordinates",
    "verbatimCoordinateSystem",
    "verbatimSRS",
    "decimalLatitude",
    "decimalLongitude",
    "geodeticDatum",
    "coordinateUncertaintyInMeters",
    "coordinatePrecision",
    "pointRadiusSpatialFit",
    "footprintWKT",
    "footprintSRS",
    "footprintSpatialFit",
    "georeferencedBy",
    "georeferencedDate",
    "georeferenceProtocol",
    "georeferenceSources",
    "georeferenceVerificationStatus",
    "georeferenceRemarks",
    "geologicalContextID",
    "earliestEonOrLowestEonothem",
    "latestEonOrHighestEonothem",
    "earliestEraOrLowestErathem",
    "latestEraOrHighestErathem",
    "earliestPeriodOrLowestSystem",
    "latestPeriodOrHighestSystem",
    "earliestEpochOrLowestSeries",
    "latestEpochOrHighestSeries",
    "earliestAgeOrLowestStage",
    "latestAgeOrHighestStage",
    "lowestBiostratigraphicZone",
    "highestBiostratigraphicZone",
    "lithostratigraphicTerms",
    "group",
    "formation",
    "member",
    "bed",
    "identificationID",
    "identifiedBy",
    "identifiedByID",
    "dateIdentified",
    "identificationReferences",
    "identificationVerificationStatus",
    "typeStatus",
    "verbatimIdentification",
    "identificationRemarks",
    "identificationQualifier",
    "scientificName",
    "scientificNameAuthorship",
    "taxonID",
    "scientificNameID",
    "higherClassification",
    "kingdom",
    "phylum",
    "class",
    "order",
    "family",
    "subfamily",
    "genus",
    "genericName",
    "subgenus",
    "infragenericEpithet",
    "specificEpithet",
    "infraspecificEpithet",
    "cultivarEpithet",
    "taxonRank",
    "verbatimTaxonRank",
    "vernacularName",
    "taxonomicStatus",
    "acceptedNameUsage",
    "acceptedNameUsageID",
    "parentNameUsage",
    "parentNameUsageID",
    "originalNameUsage",
    "originalNameUsageID",
    "nameAccordingTo",
    "nameAccordingToID",
    "namePublishedIn",
    "namePublishedInID",
    "namePublishedInYear",
    "taxonConceptID",
    "nomenclaturalCode",
    "nomenclaturalStatus",
    "taxonRemarks",
]

// =====================
// Descripciones Darwin Core en español (primera fila del TSV)
// =====================
const headersDesc = [
    "ID del registro biológico",
    "Base del registro",
    "Tipo",
    "Código de la institución",
    "ID de la institución",
    "Código de la colección",
    "ID de la colección",
    "Número de catálogo",
    "Nombre del conjunto de datos",
    "ID del conjunto de datos",
    "Modificado",
    "Idioma",
    "Derechos",
    "Titular de los derechos",
    "Derechos de acceso",
    "Citación bibliográfica",
    "Referencias",
    "Código de la institución propietaria",
    "Información retenida",
    "Generalización de los datos",
    "Propiedades dinámicas",
    "Número de registro",
    "Registrado por",
    "ID del registrador",
    "ID del organismo",
    "Número de individuos",
    "Cantidad de organismo",
    "Tipo de cantidad de organismo",
    "Nombre del organismo",
    "Ámbito del organismo",
    "Organismos asociados",
    "Identificaciones previas",
    "Observaciones del organismo",
    "Sexo",
    "Etapa de vida",
    "Condición reproductiva",
    "Comportamiento",
    "Medios de establecimiento",
    "Grado de establecimiento",
    "Vía de introducción",
    "Estado de ocurrencia",
    "Preparaciones",
    "Disposición",
    "Otros números de catálogo",
    "Medios asociados",
    "Ocurrencias asociadas",
    "Referencias asociadas",
    "Secuencias asociadas",
    "Taxones asociados",
    "Observaciones de ocurrencia",
    "ID de muestra de material",
    "ID de evento padre",
    "ID del evento",
    "Protocolo de muestreo",
    "Valor de tamaño de muestra",
    "Unidad de tamaño de muestra",
    "Esfuerzo de muestreo",
    "Fecha del evento",
    "Día de inicio del año",
    "Día de fin del año",
    "Año",
    "Mes",
    "Día",
    "Fecha del evento (verbatim)",
    "Hora del evento",
    "Hábitat",
    "Número de campo",
    "Notas de campo",
    "Observaciones del evento",
    "ID de la localización",
    "Geografía superior",
    "ID de geografía superior",
    "Continente",
    "Cuerpo de agua",
    "Grupo de islas",
    "Isla",
    "País",
    "Código del país",
    "Provincia o estado",
    "Condado",
    "Municipio",
    "Localidad",
    "Localidad (verbatim)",
    "Elevación (verbatim)",
    "Elevación mínima en metros",
    "Elevación máxima en metros",
    "Datum vertical",
    "Profundidad (verbatim)",
    "Profundidad mínima en metros",
    "Profundidad máxima en metros",
    "Distancia mínima sobre superficie en metros",
    "Distancia máxima sobre superficie en metros",
    "Localización según",
    "Observaciones de localización",
    "Latitud (verbatim)",
    "Longitud (verbatim)",
    "Coordenadas (verbatim)",
    "Sistema de coordenadas (verbatim)",
    "SRS (verbatim)",
    "Latitud decimal",
    "Longitud decimal",
    "Datum geodésico",
    "Incertidumbre de coordenadas en metros",
    "Precisión de coordenadas",
    "Ajuste de radio espacial",
    "WKT de huella",
    "SRS de huella",
    "Ajuste espacial de huella",
    "Georreferenciado por",
    "Fecha de georreferenciación",
    "Protocolo de georreferenciación",
    "Fuentes de georreferenciación",
    "Estado de verificación de georreferenciación",
    "Observaciones de georreferenciación",
    "ID de contexto geológico",
    "Eón más antiguo o eonotema más bajo",
    "Eón más reciente o eonotema más alto",
    "Era más antigua o eratema más bajo",
    "Era más reciente o eratema más alto",
    "Periodo más antiguo o sistema más bajo",
    "Periodo más reciente o sistema más alto",
    "Época más antigua o serie más baja",
    "Época más reciente o serie más alta",
    "Edad más antigua o etapa más baja",
    "Edad más reciente o etapa más alta",
    "Zona bioestratigráfica más baja",
    "Zona bioestratigráfica más alta",
    "Términos litoestratigráficos",
    "Grupo geológico",
    "Formación",
    "Miembro",
    "Capa",
    "ID de identificación",
    "Identificado por",
    "ID del identificador",
    "Fecha de identificación",
    "Referencias de identificación",
    "Estado de verificación de identificación",
    "Estado de tipo",
    "Identificación (verbatim)",
    "Observaciones de identificación",
    "Calificador de identificación",
    "Nombre científico",
    "Autoría del nombre científico",
    "ID del taxón",
    "ID del nombre científico",
    "Clasificación superior",
    "Reino",
    "Filo",
    "Clase",
    "Orden",
    "Familia",
    "Subfamilia",
    "Género",
    "Nombre genérico",
    "Subgénero",
    "Epíteto infragenérico",
    "Epíteto específico",
    "Epíteto infraespecífico",
    "Epíteto de cultivar",
    "Rango taxonómico",
    "Rango taxonómico (verbatim)",
    "Nombre vernáculo",
    "Estado taxonómico",
    "Uso de nombre aceptado",
    "ID de uso de nombre aceptado",
    "Nombre padre usado",
    "ID de nombre padre usado",
    "Nombre original usado",
    "ID de nombre original usado",
    "Nombre de acuerdo con",
    "ID de nombre de acuerdo con",
    "Nombre publicado en",
    "ID del nombre publicado en",
    "Nombre publicado en el año",
    "ID del concepto taxonómico",
    "Código nomenclatural",
    "Estado nomenclatural",
    "Comentarios del taxón",
]

// =====================
// Función de exportación TSV Darwin Core
// =====================
export async function exportDarwinCoreTSV(id) {
    // 1. Query a Supabase

    let query = supabase.from("especies").select("*").eq("estado", 1).eq("reference_by", id)

    const { data, error } = await query
    if (error) {
        console.error("Error consultando especies:", error)
        alert("Error al consultar datos en Supabase")
        return
    }
    if (!data || data.length === 0) {
        alert("No hay registros para exportar.")
        return
    }

    // 2. Construir TSV
    let tsvContent = ""

    // Fila 1 → headers técnicos
    tsvContent += headers.join("\t") + "\n"

    // Fila 2 → descripciones en español
    tsvContent += headersDesc.join("\t") + "\n"

    // Filas siguientes → datos reales
    data.forEach((row) => {
        const line = headers.map((field) => (row[field] !== null && row[field] !== undefined ? row[field] : "")).join("\t")
        tsvContent += line + "\n"
    })

    // 3. Descargar archivo
    const blob = new Blob([tsvContent], { type: "text/tab-separated-values;charset=utf-8" })
    saveAs(blob, "DarwinCore_SIMUBIO.tsv")
}
